services:
  template_db:
    container_name: template_db
    image: postgres:17-alpine
    ports:
      - "127.0.0.1:6543:5432"
    restart: unless-stopped
    volumes:
      - template_db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1000M

  template_api:
    depends_on:
      template_db:
        condition: service_healthy
    container_name: template_api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:${API_PORT:-8000}:8000"
    restart: unless-stopped
    develop:
      watch:
        - action: rebuild
          path: .
          target: /app
          ignore:
            - .venv/
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 2000M

volumes:
  template_db:
